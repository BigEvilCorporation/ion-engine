if $(NT)
{
	KOS_PATH = C:/msys32/opt/toolchains/dc/kos ;
	KOS_PORTS_PATH = C:/msys32/opt/toolchains/dc/kos-ports ;
	KOS_SHELF_PATH = C:/msys32/opt/toolchains/dc/sh-elf ;
	SH_ELF_EXE_SUFFIX = .exe ;
	SH_ELF_EXE = sh-elf-c++.exe ;
	GCC_VER = 4.7.3 ;
}
else if $(UNIX)
{
	KOS_PATH = /opt/toolchains/dc/kos ;
	KOS_PORTS_PATH = /opt/toolchains/dc/kos-ports ;
	KOS_SHELF_PATH = /opt/toolchains/dc/sh-elf ;
	SH_ELF_EXE = sh-elf-c++ ;
	SH_ELF_EXE_SUFFIX = "" ;
	GCC_VER = 4.7.3 ;
}
else
{
	error "Dreamcast tool chain not supported on this host platform" ;
}

if ! [ RuleExists FindKOSToolchain ]
{
	rule FindKOSToolchain
	{
		local PATHS =
			$(KOS_SHELF_PATH)/bin
			$(KOS_PATH)/sh-elf/bin
		;

		local kos = [ Glob $(PATHS) : $(SH_ELF_EXE) ] ;
		if ! $(kos)
		{
			return ;
		}

		return [ Match (.+)/ : $(kos[1]) ] ;
	}
}

if ! [ RuleExists FindMingW32Runtime ]
{
	rule FindMingW32Runtime
	{
		local PATHS =
			C:/msys32/mingw32/bin
			$(KOS_PATH)/mingw32/bin
		;

		local mingw32 = [ Glob $(PATHS) : libiconv-2.dll ] ;
		if ! $(mingw32)
		{
			return ;
		}

		return [ Match (.+)/ : $(mingw32[1]) ] ;
	}
}

rule C.Toolchain.kos.dreamcast.Detect
{
	# Find compiler
	local COMPILER_BIN_PATH = [ FindKOSToolchain ] ;
	if ! $(COMPILER_BIN_PATH)
	{
		echo "ERROR: Path to sh-elf-c++ (KOS compiler suite) not found" ;
		return ;
	}

	COMPILER_BIN_PATH on $(C.COMPILER_SUITE_SYMBOL) = $(COMPILER_BIN_PATH) ;

	# Find compiler runtime (MingW32, etc) if needed
	if $(NT)
	{
		local COMPILER_RUNTIME_PATH = [ FindMingW32Runtime ] ;

		if ! $(COMPILER_RUNTIME_PATH)
		{
			echo "ERROR: Path to libiconv-2.dll (mingw32 runtime) not found" ;
			return ;
		}

		COMPILER_RUNTIME_PATH on $(C.COMPILER_SUITE_SYMBOL) = $(COMPILER_RUNTIME_PATH) ;
	}

	C.COMPILER = kos ;
	C.COMPILER_SUITE = kos ;
	C.COMPILER_SUITE_SYMBOL = !c.$(C.ACTIVE_TOOLCHAIN).info! ;

	C._MultiCppCompile_SetupFlags on $(C.COMPILER_SUITE_SYMBOL) = C.kos._MultiCppCompile_SetupFlags ;

	return $(C.COMPILER) ;
}

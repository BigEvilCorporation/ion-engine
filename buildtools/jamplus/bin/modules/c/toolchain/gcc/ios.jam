rule C.Toolchain.gcc.ios.Detect {
	local foundPath ;
	if ! $(NT) {
		local PATHS =
			/Applications/Xcode.app/Contents/Developer/usr/bin
			$(PATH)
		;
		foundPath = [ Glob $(PATHS) : gcc ] ;
	}

	if ! $(foundPath) {
		return ;
	}

	foundPath = [ Match (.+)/ : $(foundPath[1]) ] ;
    C.Toolchain.gcc.Setup $(foundPath) ;

	local COMPILER_BIN_PATH = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin ;
	COMPILER_BIN_PATH_SECONDARY on $(C.COMPILER_SUITE_SYMBOL) = $(COMPILER_BIN_PATH) ;
	C.AR on $(C.COMPILER_SUITE_SYMBOL) = $(COMPILER_BIN_PATH)/ar -r ;
	C.RANLIB on $(C.COMPILER_SUITE_SYMBOL) = $(COMPILER_BIN_PATH)/ranlib ;
	if $(IOSBUILDENV_PATH) {
		C.LINK on $(C.COMPILER_SUITE_SYMBOL) = $(COMPILER_BIN_PATH)/ld ;
		IMCONVERT on $(C.COMPILER_SUITE_SYMBOL) = $(COMPILER_BIN_PATH)/imconvert ;
	} else {
	    ACTOOL on $(C.COMPILER_SUITE_SYMBOL) = @($(COMPILER_BIN_PATH)/../../../../usr/bin/actool:R=) ;
	}
	C.DSYMUTIL on $(C.COMPILER_SUITE_SYMBOL) = $(COMPILER_BIN_PATH)/dsymutil ;
	C.LIPO on $(C.COMPILER_SUITE_SYMBOL) = $(COMPILER_BIN_PATH)/lipo ;
	SUFEXE on $(C.COMPILER_SUITE_SYMBOL) = "" ;
	SUFMODULE on $(C.COMPILER_SUITE_SYMBOL) = .dylib ;
	SUFLINKLIBS on $(C.COMPILER_SUITE_SYMBOL) = .a .dylib ;

	C.Toolchain.$(C.COMPILER_SUITE).ios-shared ;

	C._ApplicationFromObjects_LinkFlags on $(C.COMPILER_SUITE_SYMBOL) = C.ios._ApplicationFromObjects_LinkFlags ;
	C._ApplicationFromObjects_PostBuild on $(C.COMPILER_SUITE_SYMBOL) = C.ios._ApplicationFromObjects_PostBuild ;
	C._Inherits on $(C.COMPILER_SUITE_SYMBOL) = C.ios._Inherits ;
	C._LibraryFromObjects_LibFlags on $(C.COMPILER_SUITE_SYMBOL) += C.ios._LibraryFromObjects_LibFlags ;
	C._MultiCppCompile_SetupFlags on $(C.COMPILER_SUITE_SYMBOL) = C.ios._MultiCppCompile_SetupFlags ;
	C._SharedLibraryFromObjects_LinkFlags on $(C.COMPILER_SUITE_SYMBOL) = C.ios._SharedLibraryFromObjects_LinkFlags ;

	ios.SDK $(SDK_VERSION) ;

Echo Here.  ;
	C.Toolchain.$(C.COMPILER_SUITE).ios-$(C.CONFIG) ;

 	return $(C.COMPILER) ;
}



//Samplers
sampler2D gDiffuseTexture;

//Diffuse
float4 gDiffuseColour = float4(1.0f, 1.0f, 1.0f, 1.0f);

//Matrices
float4x4 gWorldViewProjectionMatrix;

struct InputV
{
	float4 position	: POSITION;
	float2 texCoord	: TEXCOORD0;
	float4 colour	: COLOR;
};

struct OutputV
{
	float4 position	: POSITION;
	float2 texCoord	: TEXCOORD0;
	float4 colour	: COLOR;
};

OutputV VertexProgram(InputV input)
{
	OutputV output;

	output.position = mul(gWorldViewProjectionMatrix, input.position);
	output.texCoord = input.texCoord;
	output.colour = gDiffuseColour;

	return output;
}

float4 FragmentProgram(OutputV input) : COLOR
{
	return (input.colour * tex2D(gDiffuseTexture, input.texCoord));
};

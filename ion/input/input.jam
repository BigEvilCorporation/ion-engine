SubDir bigevilcorp ion input ;

ApplyIonCompiler input ;
ApplyIonDefines input ;
ApplyIonIncludes input ;

local SRC =
	Gamepad.cpp
 	Gamepad.h
	input.jam
	Keyboard.cpp
	Keyboard.h
    Keycodes.h
    Keytable.h
	Mouse.cpp
	Mouse.h
	;

rule ApplyInputXInput TARGET
{
	SRC +=
		xinput/GamepadXInput.cpp
		xinput/GamepadXInput.h
		;

	C.Defines $(TARGET) : ION_INPUT_XINPUT ;

	ApplyXInputSDK $(TARGET) ;
}

rule ApplyInputSDL TARGET
{
	SRC +=
		sdl/GamepadSDL.cpp
		sdl/GamepadSDL.h
		sdl/GamepadSDLLegacy.cpp
		sdl/GamepadSDLLegacy.h
		;

	C.Defines $(TARGET) : ION_INPUT_SDL ;

	ApplySDL2SDK $(TARGET) ;
}

rule ApplyInputMaple TARGET
{
	SRC +=
		dreamcast/GamepadMaple.cpp
		dreamcast/GamepadMaple.h
		;

	C.Defines $(TARGET) : ION_INPUT_MAPLE ;
}

rule ApplyInputSteam TARGET
{
	SRC +=
		steam/GamepadSteam.cpp
		steam/GamepadSteam.h
		;

	C.Defines $(TARGET) : ION_INPUT_STEAM ;
}

if ( win32 in $(PLATFORM) )
{
	ApplyInputXInput input ;
	ApplyInputSDL input ;
	# ApplyInputSteam input ;
}

if ( win64 in $(PLATFORM) )
{
	ApplyInputXInput input ;
	ApplyInputSDL input ;
	# ApplyInputSteam input ;
}

if ( linux64 in $(PLATFORM) )
{
	ApplyInputSDL input ;
	# ApplyInputSteam input ;
}

if ( macosx64 in $(PLATFORM) )
{
	ApplyInputSDL input ;
	# ApplyInputSteam input ;
}

if ( dreamcast in $(PLATFORM) )
{
	ApplyInputMaple input ;
}

AutoSourceGroup input : $(SRC) ;
C.RuntimeType input : static ;
C.Library input : $(SRC) ;

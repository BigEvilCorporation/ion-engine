SubDir bigevilcorp ion audio ;

ApplyIonDefines audio ;
ApplyIonIncludes audio ;

local SRC =
	Buffer.cpp
	Buffer.h
	Callback.h
	DataFormat.h
	Decoder.h
	DecoderOGG.h
	Device.h
	Effect.h
	Encoder.h
	Engine.cpp
	Engine.h
	FileReader.cpp
	FileReader.h
	FileReaderOGG.h
	FileReaderWAV.cpp
	FileReaderWAV.h
	FileSource.cpp
	FileSource.h
	OutputDevice.h
	Source.cpp
	Source.h
	StreamDesc.h
	Voice.cpp
	Voice.h
	;

SRC_ENGINE_XAUDIO =
	xaudio/EngineXAudio.cpp
	xaudio/EngineXAudio.h
	xaudio/OutputDeviceXAudio.cpp
	xaudio/OutputDeviceXAudio.h
	xaudio/VoiceXAudio.cpp
	xaudio/VoiceXAudio.h
	;

SRC_ENGINE_SDL =
	sdl/EngineSDL.cpp
	sdl/EngineSDL.h
	sdl/OutputDeviceSDL.cpp
	sdl/OutputDeviceSDL.h
	sdl/VoiceSDL.cpp
	sdl/VoiceSDL.h
	;

SRC_ENGINE_SDL2 =
	sdl2/EngineSDL2.cpp
	sdl2/EngineSDL2.h
	sdl2/OutputDeviceSDL2.cpp
	sdl2/OutputDeviceSDL2.h
	sdl2/VoiceSDL2.cpp
	sdl2/VoiceSDL2.h
	;

if ( ( win32 in $(PLATFORM) ) | ( win64 in $(PLATFORM) ) )
{
	if ( xaudio in $(ion_audio_engine) )
	{
		echo "ion::audio using XAudio2 engine" ;
		SRC += $(SRC_ENGINE_XAUDIO) ;
		ApplyWin32SDK audio ;
		ApplyXAudio2SDK audio ;
	}

	if ( sdl2 in $(ion_audio_engine) )
	{
		echo "ion::audio using SDL2 engine" ;
		SRC += $(SRC_ENGINE_SDL2) ;
		ApplySDL2SDK audio : audio ;
	}
}

if ( dreamcast in $(PLATFORM) )
{
	echo "ion::audio using SDL engine" ;
	SRC += $(SRC_ENGINE_SDL) ;
	ApplySDLSDK audio : audio ;
}

if ( ( linux64 in $(PLATFORM) ) | ( macosx64 in $(PLATFORM) ) )
{
	echo "ion::audio using SDL2 engine" ;
	SRC += $(SRC_ENGINE_SDL2) ;
	ApplySDL2SDK audio : audio ;
}

AutoSourceGroup audio : $(SRC) ;
C.RuntimeType audio : static ;
C.Library audio : $(SRC) ;